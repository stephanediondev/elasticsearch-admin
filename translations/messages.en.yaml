theme:
    light: Light
    dark: Dark
    auto: Auto

boolean:
    0: "No"
    1: "Yes"
    "": "No"
    "false": "No"
    "true": "Yes"

offline:
    title: "Offline"
    note: "Sorry, you are not connected to network."
error403:
    title: "Forbidden"
    note: "Sorry, you are not allowed to access this content."
error404:
    title: "Not Found"
    note: "This content does not exist."
error405:
    title: "Method Not Allowed"
    note: "Sorry, you are not allowed to access this content."
error500:
    title: "Internal Server Error"
    note: "Sorry, we have an error on this content. \n It is recorded and we will check the problem as soon as possible."
error503:
    title: "Service Unavailable"
    note: "We are currently in maintenance for few minutes. \n Thanks much for your understanding."
    elasticsearch_server_error: "Couldn't connect to Elasticsearch (server error)"
    elasticsearch_credentials_error: "Couldn't connect to Elasticsearch (credentials error)"

"-": "-"
action: "Action"
active_shards: "Active shards"
add: "Add"
add_to_home_screen: "Add to home screen"
added: "Added"
addresses: "Addresses"
alias: "Alias"
aliases: "Aliases"
all: "All"
allocate_explanation: "Allocate explanation"
allocation_explain: "Allocation explain"
allocation_delayed: "Allocation delayed"
allocation_failed: "Allocation failed"
allow_notifications: "Allow notifications"
app_notifications: "Notifications"
app_roles: "Roles"
app_uninstall: "Uninstall"
app_uninstall_note: "After confirmation, the indices below will be deleted. You will be able to install again using the secret key."
app_upgrade: "Upgrade"
app_upgrade_note: "All indices are upgraded."
app_users: "Users"
app_users_note: "This application uses its own users and you can define roles and permissions to limit the features. But still you must reserves <strong>access to trusted users</strong> from the same team or company. Be carefull by defining a role other than admin, with the access to console, Elasticsearch users and application users."
application: "Application"
applications: "Applications"
apply: "Apply"
array: "Array"
audit: "Audit"
audit_checkpoint: "Checkpoint"
audit_comment: "Comment"
audit_fail: "Fail"
audit_notice: "Notice"
audit_pass: "Pass"
audit_result: "Result"
audit_checkpoints:
    security_features: "The security features are enabled"
    cluster_name: "The cluster name is not elasticsearch"
    same_es_version: "The nodes have the same version"
    same_plugins: "The nodes have the same plugins"
    unassigned_shards: "There is no unassigned shards"
    adaptive_replica_selection: "The Adaptive Replica Selection is enabled"
    indices_with_replica: "All indices have a replica"
    replication_100_percent: "The replication is equal or greater than 100%"
    indices_replicas_data_nodes: "All indices have a number of replicas inferior to data nodes count"
    indices_opened: "All indices are open"
    close_index_not_enabled: "Closing an index is not allowed"
    allocation_disk_threshold: "The disk-based shard allocation is enabled"
    heap_size_below_50: "The heap size is no more than 50% of the RAM"
    anonymous_access_disabled: "The anonymous access is disabled"
    license_not_expired: "The license is still valid for more than 30 days"
    file_descriptors: "The number of open files descriptors is higher than 65535"
    password_not_changeme: "The password for the user elastic is not changeme"
    below_disk_thresholds: "All disks are below thresholds"
    cluster_not_readonly: "The cluster is not read-only"
    heap_size_init_equal_max: "The initial heap size is equal to the maximum heap size"
    slm_policies_schedule_unique: "All SLM policies have unique schedule"
    repositories_connected: "All repositories are connected"
    shard_allocation_enabled: "The cluster-level shard allocation is enabled"
    max_shards_per_node: "The cluster shards per node limit is below 1000"
    total_shards_per_node: "The cluster shards allocation per node limit is below 1000"
    deprecations: "There is no deprecations"
    format_msg_no_lookups: "The JVM option -Dlog4j2.formatMsgNoLookups=true is set"
audit_comments:
    fail_for_nodes: "The checkpoint fails for the following nodes:"
    fail_for_repositories: "The checkpoint fails for the following repositories:"
    cluster_name:
        notice: "The name may be changed to a name which describes the purpose of the cluster."
        pass: "The cluster name is <code>{name}</code>."
    same_es_version:
        plural: "The installed versions are:"
        singular: "The installed version is:"
    same_plugins:
        fail: "Plugins are missing for the following nodes:"
        pass_plural: "The installed plugins are: {plugins}"
        pass_no_plugins: "No plugins are installed."
    adaptive_replica_selection:
        fail: "The setting <code>{setting}</code> should be set to <code>{value}</code>."
    indices_with_replica:
        notice: "There is only one node."
    replication_100_percent:
        notice: "There is only one node."
        note: "The replication is at <code>{replication}</code>."
    indices_replicas_data_nodes:
        note: "The number of replicas per index should be inferior to <code>{data_nodes}</code> (number of data nodes)."
    close_index_not_enabled:
        fail: "The setting <code>{setting}</code> should be set to <code>{value}</code>."
    allocation_disk_threshold:
        fail: "The setting <code>{setting}</code> should be set to <code>{value}</code>."
    license_not_expired:
        expiration: "The {type} license expires on {date}."
        no_expiration: "There is no expiration with basic license."
    password_not_changeme:
        fail: "The user <code>elastic</code> uses the default password <code>changeme</code>."
    slm_policies_schedule_unique:
        fail: "Two or more policies have the same schedule."
    repositories_connected:
        notice: "There is no repository configured."
    shard_allocation_enabled:
        note: "The setting <code>{setting}</code> is set to <code>{value}</code>."
    max_shards_per_node:
        note: "The setting <code>{setting}</code> is set to <code>{value}</code>."
    total_shards_per_node:
        note: "The setting <code>{setting}</code> is set to <code>{value}</code>."
    format_msg_no_lookups:
        fail: "The JVM option <code>-Dlog4j2.formatMsgNoLookups=true</code> is not set for the following nodes:"
    unassigned_shards:
        fail: "The number of unassigned shards is <code>{number}</code>."
authentication_secret: "Authentication secret"
available: "Available"
awaiting_info: "Awaiting info"
aws_account: "AWS account"
back: "Back"
base_path: "Base path"
body: "Body (JSON)"
browse: "Browse"
bucket: "Bucket"
buffer_size: "Buffer size"
cache_clear: "Clear cache"
cache_clear_note: "Cached results are invalidated automatically whenever the shard refreshes, but only if the data in the shard has actually changed. In other words, you will always get the same results from the cache as you would for an uncached search request."
cancel: "Cancel"
cancellable: "Cancellable"
canned_acl: "Canned ACL"
cat: "Compact and aligned text (CAT) APIs"
ccr_auto_followed_system_indices: "CCR auto followed system indices"
change_password: "Change password"
choose_file: "Choose file..."
chunk_size: "Chunk size"
classname: "Class name"
cleanup: "Cleanup"
client: "Client"
clone: "Clone"
close: "Close"
close_note: "A closed index is blocked for read/write operations and does not allow all operations that opened indices allow. It is not possible to index documents or to search for documents in a closed index. This allows closed indices to not have to maintain internal data structures for indexing or searching documents, resulting in a smaller overhead on the cluster."
cluster: "Cluster"
cluster_recovered: "Cluster recovered"
cluster_settings: "Cluster settings"
cold: "Cold"
component_template_system: "System component template"
component_templates: "Component templates"
command: "Command"
composed_of: "Composed of"
compress: "Compress"
configuration: "Configuration"
confirm: "Confirm"
connected: "Connected"
connections: "Connections"
container: "Container"
content: "Content"
content_encoding: "Content encoding"
copy: "Copy"
console: "Console"
coordinator_stats: "Coordinator stats"
cpu: "CPU"
create_component_template: "Create component template"
create_enrich_policy: "Create enrich policy"
create_data_stream: "Create data stream"
create_index: "Create index"
create_index_template: "Create composable index template"
create_index_template_legacy: "Create legacy index template"
create_ilm_policy: "Create ILM policy"
create_pipeline: "Create pipeline"
create_slm_policy: "Create SLM policy"
create_repository: "Create repository"
create_repository_fs: "Create Shared file system repository"
create_repository_s3: "Create AWS S3 repository"
create_repository_gcs: "Create Google Cloud Storage repository"
create_repository_azure: "Create Microsoft Azure repository"
create_role: "Create role"
create_snapshot: "Create snapshot"
create_subscription: "Create subscription"
create_subscription_push: "Create Push API"
create_subscription_email: "Create Email"
create_subscription_slack: "Create Slack Incoming Webhook"
create_subscription_teams: "Create Microsoft Teams Incoming Webhook"
create_user: "Create user"
created_at: "Created at"
creation_date: "Creation date"
critical: "Critical"
dangling_index_imported: "Dangling index imported"
dangling_indices: "Dangling indices"
dangling_indices_delete: "Delete"
dangling_indices_import: "Import"
database:
    connect: "Connect"
    mappings: "Mappings"
    loading: "Loading"
    import_completed: "Import completed"
    driver: "Driver"
    host: "Host"
    user: "User"
    password: "Password"
    dbname: "Database name"
    query: "Query"
data_stream: "Data stream"
data_streams: "Data streams"
date: "Date"
decider: "Decider"
deciders: "Deciders"
decision: "Decision"
delete: "Delete"
delete_date: "Delete date"
delete_data_stream_note: "After confirmation, the data stream will be deleted with the backing indices and any data they contain!"
delete_index_note: "After confirmation, the index will be deleted!"
deprecated: "Deprecated"
deprecated_legacy_index_templates: "Legacy index templates are deprecated and will be removed completely in a future version. Please use <a class=\"{class}\" href=\"{href}\">composable index templates</a> instead."
deprecated_reason: "Deprecated reason"
deprecations: "Deprecations"
description: "Description"
destination: "Destination"
details: "Details"
disable: "Disable"
disabled: "Disabled"
disk_thresholds: "Disk thresholds"
disk: "Disk"
docker_hub: "Docker Hub"
documents: "Documents"
documents_deleted: "Documents deleted"
duration: "Duration"
edit_as_persistent: "Edit as persistent"
edit_as_transient: "Edit as transient"
elasticsearch_roles: "Roles"
elasticsearch_users: "Users"
email: "Email"
email_already_used: "Email already used"
empty: "Empty"
empty_note: "After confirmation, all the documents in this index will be deleted!"
enable: "Enable"
enabled: "Enabled"
end_time: "End time"
endpoint: "Endpoint"
endpoint_already_used: "Endpoint already used"
enrich: "Enrich policies"
enrich_fields: "Enrich fields"
errors: "Errors"
es_process: "ES process"
exclude_yes_decisions: "Exclude yes decisions"
execute: "Execute"
executed_searches_total: "Executed searches total"
executing_policies: "Executing policies"
existing_index_restored: "Existing index restored"
expire_after: "Expire after"
expiry_date: "Expiry date"
export: "Export"
explanation: "Explanation"
external_link: "External link"
failed: "Failed"
failures: "Failures"
feature: "Feature"
features_by_version: "Features related to Elasticsearch version"
features_xpack: "X-Pack features"
fetch_size: "Fetch size"
field: "Field"
file_descriptors: "File descriptors"
flush: "Flush"
flush_note: "By default, Elasticsearch uses heuristics in order to automatically trigger flushes as required. It is rare for users to need to call the API directly."
force_merge: "Force merge"
force_merge_note: "Merging reduces the number of segments in each shard by merging some of them together, and also frees up the space used by deleted documents. Merging normally happens automatically, but sometimes it is useful to trigger a merge manually."
freeze: "Freeze"
freeze_note: "A frozen index has almost no overhead on the cluster (except for maintaining its metadata in memory) and is read-only. Read-only indices are blocked for write operations, such as docs-index_ or force merges."
from_node: "From node"
frozen: "Frozen"
full_name: "Full name"
generation: "Generation"
github: "GitHub"
green: "Green"
headers: "Headers"
health: "Health"
heap: "Heap"
help: "Help"
help_form:
    reindex:
        source: "The name of the index you are copying from. Also accepts a wildcard * or a comma-separated list of indices to reindex from multiple sources."
        dest: "The name of the index you are copying to."
    pipeline:
        name: "A unique identifier for this pipeline."
        description: "A description of what this pipeline does."
        processors: "The processors to use to transform the documents before indexing."
        on_failure: "The alternate processors to execute after a processor."
    enrich_policy:
        name: "Enrich policy name used to limit the request."
        type: "The enrich policy type determines how enrich data is matched to incoming documents."
        indices: "Source indices used to create the enrich index."
        match_field: "Field in the source indices used to match incoming documents."
        enrich_fields: "Fields to add to matching incoming documents."
        query: "Query type used to filter documents in the enrich index for matching."
    app_role:
        name: "The name of the role. Only uppercase letters and underscore."
    role:
        name: "The name of the role."
        applications: "A list of application privilege entries."
        cluster: "A list of cluster privileges. These privileges define the cluster level actions that users with this role are able to execute."
        run_as: "A list of users that the owners of this role can impersonate."
        indices: "A list of indices permissions entries."
        metadata: "Optional meta-data."
    snapshot:
        name: "A unique identifier for this snapshot."
        repository: "The repository where you want to store this snapshot."
        indices: "Indices to back up."
        ignore_unavailable: "Ignores indices that are unavailable when taking the snapshot. Otherwise, the entire snapshot will fail."
        partial: "Allows snapshot of indices with primary shards that are unavailable. Otherwise, the entire snapshot will fail."
        include_global_state: "Stores the global state of the cluster as part of the snapshot."
    ilm_policy:
        name: "A unique identifier for this policy."
        hot: "The index is actively being written to."
        warm: "The index is generally not being written to, but is still queried."
        cold: "The index is no longer being updated and is seldom queried. The information still needs to be searchable, but it’s okay if those queries are slower."
        delete: "The index is no longer needed and can safely be deleted."
    slm_policy:
        name: "A unique identifier for this policy."
        snapshot_name: "The name for the snapshots. A unique identifier is automatically added to each name. Supports <a class=\"text-light\" rel=\"noreferrer\" target=\"_blank\" href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/date-math-index-names.html#date-math-index-names\">date math expressions</a>."
        repository: "The repository where you want to store the snapshots."
        indices: "Indices to back up."
        schedule: "The frequency at which to take the snapshots. Use <a class=\"text-light\" rel=\"noreferrer\" target=\"_blank\" href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/trigger-schedule.html#schedule-cron\">cron expression</a>."
        expire_after: "The time to wait before deleting snapshots."
        min_count: "The minimum number of snapshots to store in your cluster."
        max_count: "The maximum number of snapshots to store in your cluster."
        ignore_unavailable: "Ignores indices that are unavailable when taking the snapshot. Otherwise, the entire snapshot will fail."
        partial: "Allows snapshots of indices with primary shards that are unavailable. Otherwise, the entire snapshot will fail."
        include_global_state: "Stores the global state of the cluster as part of the snapshot."
    index_template_legacy:
        name: "A unique identifier for this template."
        template: "The index pattern to apply to the template."
        index_patterns: "The index patterns to apply to the template (separated by commas)."
        version: "A number that identifies the template to external management systems."
        order: "The merge order when multiple templates match an index."
        settings: "Define the behavior of your indices."
        mappings: "Define how to store and index documents."
        aliases: "Set up aliases to associate with your indices."
    index_template:
        name: "A unique identifier for this template."
        index_patterns: "The index patterns to apply to the template (separated by commas)."
        version: "A number that identifies the template to external management systems."
        priority: "Priority to determine index template precedence when a new index is created."
        composed_of: "An ordered list of component template names."
        data_stream: "The template creates data streams instead of indices."
        settings: "Define the behavior of your indices."
        mappings: "Define how to store and index documents."
        aliases: "Set up aliases to associate with your indices."
        metadata: "Optional meta-data."
    component_template:
        name: "A unique identifier for this template."
        version: "A number that identifies the template to external management systems."
        settings: "Define the behavior of your indices."
        mappings: "Define how to store and index documents."
        aliases: "Set up aliases to associate with your indices."
        metadata: "Optional meta-data."
    repository:
        name: "A unique name for the repository."
        chunk_size: "Breaks files into smaller units when taking snapshots. Examples: 1g, 10mb, 5k, 1024B."
        max_snapshot_bytes_per_sec: "The rate for creating snapshots for each node. Examples: 1g, 10mb, 5k, 1024B."
        max_restore_bytes_per_sec: "The snapshot restore rate for each node. Examples: 1g, 10mb, 5k, 1024B."
        compress: "Compresses the index mapping and setting files for snapshots. Data files are not compressed."
        readonly: "Only one cluster should have write access to this repository. All other clusters should be read-only."
        verify: "Verifies the repository on submission."
        fs:
            location: "The location must be registered in the path.repo setting on all master and data nodes."
        s3:
            bucket: "The name of the AWS S3 bucket to use for snapshots."
            client: "The name of the AWS S3 client."
            base_path: "The bucket path to the repository data."
            server_side_encryption: "Encrypts files on the server using AES256 algorithm."
            buffer_size: "Beyond this minimum threshold, the S3 repository will use the AWS Multipart Upload API to split the chunk into several parts and upload each in its own request. Examples: 1g, 10mb, 5k, 1024B."
            canned_acl: "The canned ACL to add to new S3 buckets and objects."
            storage_class: "The storage class for new objects in the S3 repository."
        gcs:
            bucket: "The name of the Google Cloud Storage bucket to use for snapshots."
            client: "The name of the Google Cloud Storage client."
            base_path: "The bucket path to the repository data."
        azure:
            container: "The name of the Azure container to use for snapshots."
            client: "The name of the Azure client."
            base_path: "The container path to the repository data."
            location_mode: "The primary or secondary location. If secondary, read-only is true."
    index_search:
        query: "Use <a rel=\"noreferrer\" target=\"_blank\" class=\"text-light\" href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-query-string-query.html#query-string-syntax\">Query string syntax</a>."
    disk_thresholds:
        low: "Default value 85%"
        high: "Default value 90%"
        flood_stage: "Default value 95%"

help_modal:
    license:
        start_basic: "If you have already activated a trial, you cannot start a new trial until the next major version."

hidden: "Hidden"
history: "History"
host: "Host"
hot: "Hot"
id: "ID"
ilm_policy: "ILM policy"
ilm_short: "ILM policies"
ilm: "Index lifecycle management policies"
ignore_unavailable: "Ignore unavailable"
import: "Import"
import_from_file: "Import from file"
import_from_database: "Import from database"
import_file: "File (ODS, XLSX)"
import_note_id: "The document ID. If no ID is specified, a document ID is automatically generated."
import_note_type: "The document type. Optional, used by old ES version."
import_note_json: "JSON"
import_note_keyword: "Use carriage return to have multiple keywords"
import_note_geo_point: "Use latitude,longitude format"
include_global_state: "Include global state"
include_yes_decisions: "Include yes decisions"
incompatible: "Incompatible"
index: "Index"
index_closed: "Index closed"
index_graveyard: "Index graveyard"
index_created: "Index created"
index_patterns: "Index patterns"
index_reopened: "Index reopened"
index_settings: "Index settings"
index_system: "System index"
index_template_system: "System composable template"
index_template_system_legacy: "System legacy template"
index_template: "Composable index template"
index_template_legacy: "Legacy index template"
index_templates: "Composable index templates"
index_templates_legacy: "Legacy index templates"
indices: "Indices"
in_progress: "In progress"
initializing: "Initializing"
internal_link: "Internal link"
ip: "IP"
issue_date: "Issue date"
last_success: "Last success"
last_failure: "Last failure"
level: "Level"
license: "License"
lifecycle: "Lifecycle"
list: "List"
load_average: "Load average"
loading: "Loading"
location: "Location"
location_mode: "Location mode"
login: "Login"
logout: "Logout"
long_text: "More than 500 characters"
lower_bound_of_the_total: "The number of returned documents is a lower bound."
managed: "Managed"
manual_allocation: "Manual allocation"
map: "Map"
mappings: "Mappings"
master: "Master"
master_node: "Master node"
match_field: "Match field"
max_count: "Maximum count"
max_restore_bytes_per_sec: "Max restore bytes per second"
max_snapshot_bytes_per_sec: "Max snapshot bytes per second"
memory: "Memory"
message: "Message"
metadata: "Metadata"
method: "Method"
min_age: "Minimum age"
min_count: "Mininum count"
ml_settings: "Machine Learning settings"
mode: "Mode"
modified_date: "Modified date"
more: "More"
name: "Name"
name_already_used: "Name already used"
names: "Names"
next: "Next"
new_index_restored: "New index restored"
next_execution: "Next execution"
node: "Node"
node_allocation_decisions: "Node allocation decisions"
node_decision: "Node decision"
node_left: "Node left"
node_roles:
    d: "Data"
    data: "Data"
    i: "Ingest"
    ingest: "Ingest"
    m: "Master-eligible"
    master: "Master-eligible"
    v: "Voting-only"
    voting_only: "Voting-only"
    ml: "Machine learning"
    transform: "Transform"
    remote_cluster_client: "Remote cluster client node"
    -: "Coordinating only"
    l: "Machine learning"
    t: "Transform"
    r: "Remote cluster client node"
    h: "Hot data"
    w: "Warm data"
    c: "Cold data"
    s: "Content data"
    f: "Frozen data"
    data_hot: "Hot data"
    data_warm: "Warm data"
    data_cold: "Cold data"
    data_content: "Content data"
    data_frozen: "Frozen data"
node_settings: "Node settings"
nodes: "Nodes"
not_allowed: "Not allowed"
not_available: "Not available"
no: "No"
no_attempt: "No attempt"
no_valid_shard_copy: "No valid shard copy"
notifications: "Notifications"
on_failure: "On failure"
open: "Open"
open_note: "Closed indices consume a significant amount of disk-space which can cause problems in managed environments."
operation_mode: "Operation mode"
orange: "Orange"
order: "Order"
os: "OS"
os_version: "OS version"
os_arch: "OS architecture"
partial: "Partial"
password: "Password"
password_confirm: "Confirm password"
path: "Path"
permissions: "Permissions"
pipelines: "Pipelines"
plugins: "Plugins"
previous: "Previous"
primary: "Primary"
primary_failed: "Primary failed"
primary_shards: "Primary shards"
primary_size: "Primary size"
priority: "Priority"
privileges: "Privileges"
processor: "Processor"
processors: "Processors"
profile: "Profile"
public_key: "Public key"
query: "Query"
queue_size: "Queue size"
readonly: "Read-only"
reallocated_replica: "Reallocated replica"
reason: "Reason"
red: "Red"
refresh: "Refresh"
refresh_note: "By default, Elasticsearch periodically refreshes indices every second, but only on indices that have received one search request or more in the last 30 seconds."
register: "Register"
reindex: "Reindex"
reinitialized: "Reinitialized"
reload_secure_settings: "Reload secure settings"
relocating: "Relocating"
remote_clusters: "Remote clusters"
remote_requests_current: "Remote requests current"
remote_requests_total: "Remote requests total"
remove: "Remove"
removed: "Removed"
remove_policy: "Remove policy"
rename_pattern: "Rename pattern"
rename_replacement: "Rename replacement"
replica_added: "Replica added"
replica: "Replica"
replicas: "Replicas"
repository: "Repository"
repository_fs: "Shared file system repository"
repository_s3: "AWS S3 repository"
repository_gcs: "Google Cloud Storage repository"
repository_azure: "Microsoft Azure repository"
repositories: "Repositories"
required: "Required"
reroute_cancelled: "Reroute cancelled"
reroute_commands:
    move: "Move"
    cancel: "Cancel allocation"
    allocate_replica: "Allocate replica"
    allocate: "Allocate replica"
reserved: "Reserved"
response: "Response"
response_code: "Code"
resources: "Resources"
restore: "Restore"
results: "Results"
retention_runs: "Retention runs"
retention_failed: "Retention failed"
retention_timed_out: "Retention timed out"
retention_deletion_time: "Retention deletion time"
retry_failed: "Retry failed"
retry_failed_note: "Retry allocation of shards that are blocked due to too many subsequent allocation failures."
role: "Role"
roles: "Roles"
rollover_alias: "Alias for rollover index"
run_as: "Run as"
running: "Running"
running_time_in_nanos: "Running time in nanos"
save: "Save"
schedule: "Schedule"
score: "Score"
screenshots: "Screenshots"
search: "Search"
secret_register: "Secret key"
secret_register_wrong: "Wrong secret key"
secure_settings_password: "Secure settings password"
server_side_encryption: "Server-side encryption"
setting: "Setting"
settings: "Settings"
settings_defaults: "Defaults"
settings_persistent: "Persistent"
settings_transient: "Transient"
shard: "Shard"
shards: "Shards"
simulate: "Simulate"
size: "Size"
slm_policy: "SLM policy"
slm_short: "SLM policies"
slm: "Snapshot lifecycle management policies"
sort: "Sort"
sort_asc: "Asc."
sort_desc: "Desc."
source: "Source"
snapshot: "Snapshot"
snapshots_taken: "Successes"
snapshots_failed: "Failures"
snapshots_deleted: "Deleted"
snapshot_deletion_failures: "Deletion failures"
snapshot_name: "Snapshot name"
snapshots: "Snapshots"
sql: "SQL access"
start: "Start"
start_basic: "Revert to basic"
start_time: "Start time"
start_trial: "Start a 30-day trial"
started: "Started"
state: "State"
stats: "Stats"
stats_data:
    indices_total: "Indices"
    indices_total_documents: "Primary documents"
    indices_primary_size: "Primary size"
    indices_by_status: "Indices by status"
    indices_by_health: "Indices by health"
    indices_by_primary_shards: "Indices by primary shards number"
    indices_by_replicas: "Indices by replicas number"
    indices_by_documents: "Documents by index (top 50)"
    indices_by_primary_size: "Primary size by index (top 50)"
    shards_total: "Total shards"
    shards_total_primary: "Primary shards"
    shards_total_unassigned: "Unassigned shards"
    shards_total_documents: "Total documents"
    shards_total_size: "Total size"
    shards_by_state: "Shards by state"
    shards_by_unassigned_reason: "Shards by unassigned reason"
    shards_by_node: "Shards by node"
    shards_by_type: "Shards by type"
    snapshots_total: "Snapshots"
    snapshots_total_success: "Successful snapshots"
    snapshots_by_state: "Snapshots by state"
    snapshots_by_repository: "Snapshots by repository"
    nodes_total: "Total nodes"
    nodes_total_disk_avail: "Total disk available"
    nodes_total_disk_used: "Total disk used"
    nodes_by_role: "Nodes by role"
    nodes_by_es_version: "Nodes by ES version"
    nodes_by_jdk_version: "Nodes by JDK version"
    nodes_by_os: "Nodes by OS"
    nodes_by_os_arch: "Nodes by architecture"
    nodes_by_disk_avail: "Disk available by node"
    nodes_by_disk_used: "Disk used by node"
status: "Status"
stop: "Stop"
stopped: "Stopped"
stopping: "Stopping"
storage_class: "Storage class"
subject: "Subject"
submit: "Submit"
subscription: "Subscriptions"
subscription_push: "Push API"
subscription_email: "Email"
subscription_slack: "Slack Incoming Webhook"
subscription_teams: "Microsoft Teams Incoming Webhook"
subscriptions: "Subscriptions"
subscriptions_note: "Receive notifications about cluster health, node up, node down, disk threshold, license expiration, ES version"
summary: "Summary"
success: "Success"
system: "System"
target_name: "Target name"
tasks: "Tasks"
template: "Template"
test: "Test"
throttle: "Throttle"
throttled: "Throttled"
timestamp_field: "Timestamp field"
to_node: "To node"
toggle_navigation: "Toggle navigation"
tools: "Tools"
total: "Total"
total_primary_documents: "Primary documents"
total_size: "Total size"
total_snapshots_taken: "Snapshots taken"
total_snapshots_failed: "Snapshots failed"
total_snapshots_deleted: "Snapshots deleted"
total_snapshot_deletion_failures: "Snapshot deletion failures"
translation_to_dsl: "Translation to DSL"
type: "Type"
unassigned: "Unassigned"
unassigned_details: "Unassigned details"
unassigned_reason: "Unassigned reason"
unassigned_shards: "Unassigned shards"
unfreeze: "Unfreeze"
unfreeze_note: "When a frozen index is unfrozen, the index goes through the normal recovery process and becomes writeable again."
update: "Update"
unsubscribe: "Unsubscribe"
uptime: "Uptime"
url: "URL"
usage: "Usage"
used: "Used"
users: "Users"
uuid: "UUID"
value: "Value"
verify: "Verify"
version: "Version"
version_es: "ES version"
version_jvm: "JVM version"
version_created: "Version (created)"
version_upgraded: "Version (upgraded)"
warm: "Warm"
warning: "Warning"
watermark_flood_stage: "Flood stage"
watermark_high: "High"
watermark_low: "Low"
worse_balance: "Worse balance"
yellow: "Yellow"
yes: "Yes"
